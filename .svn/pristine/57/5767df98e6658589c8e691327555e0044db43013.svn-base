//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.208
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Copyright 2008, Tenta Corporation, Version 1.5
namespace UMSV.Schema {
    using System;
    using System.ComponentModel;
    using System.ComponentModel.Design;
    using System.Collections;
    using System.Collections.Generic;
    using System.Collections.Specialized;
    using System.Xml;
    using System.Xml.Schema;
    using System.Xml.Serialization;
    using System.IO;
    
    
    public partial class GatewayConfigUtility {
        
        public const string SchemaNamespace = "http://tempuri.org/MediaGatewayConfig.xsd";
        
        public static string Serialize<T>(object o, bool indented)
         {
            StringWriter writer = new StringWriter();
            XmlTextWriter xmlWriter = new XmlTextWriter(writer);
            if (indented) {
                xmlWriter.Formatting = Formatting.Indented;
            }
            else {
                xmlWriter.Formatting = Formatting.None;
            }
            XmlSerializer serializer = new XmlSerializer(typeof(T));
            serializer.Serialize(xmlWriter, o);
            return writer.ToString();
        }
        
        public static T Deserialize<T>(string objectXml)
         {
            StringReader reader = new StringReader(objectXml);
            XmlSerializer serializer = new XmlSerializer(typeof(T));
            T classObject = ((T)(serializer.Deserialize(reader)));
            reader.Close();
            return classObject;
        }
        
        public static T DeserializeFile<T>(string path)
         {
            string xml = File.ReadAllText(path);
            return GatewayConfigUtility.Deserialize<T>(xml);
        }
    }
    
    [Serializable()]
    [XmlRoot(ElementName="MediaGatewayConfig", Namespace=GatewayConfigUtility.SchemaNamespace, IsNullable=false)]
    public partial class MediaGatewayConfig : INotifyPropertyChanged {
        
        [XmlElement(ElementName="Cisco")]
        public List<MediaGatewayConfigCisco> _Ciscos;
        
        public const string CiscosProperty = "Ciscos";
        
        [XmlElement(ElementName="Link")]
        public List<MediaGatewayConfigLink> _Links;
        
        public const string LinksProperty = "Links";
        
        [XmlIgnore()]
        public List<MediaGatewayConfigCisco> Ciscos {
            get {
                if ((_Ciscos == null)) {
                    _Ciscos = new List<MediaGatewayConfigCisco>();
                }
                return _Ciscos;
            }
            set {
                if ((_Ciscos != value)) {
                    this._Ciscos = value;
                    this.SendPropertyChanged("Ciscos");
                }
            }
        }
        
        [XmlIgnore()]
        public List<MediaGatewayConfigLink> Links {
            get {
                if ((_Links == null)) {
                    _Links = new List<MediaGatewayConfigLink>();
                }
                return _Links;
            }
            set {
                if ((_Links != value)) {
                    this._Links = value;
                    this.SendPropertyChanged("Links");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void SendPropertyChanged(string propertyName) {
            if ((PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [Serializable()]
    [XmlType(TypeName="MediaGatewayConfigCisco", Namespace=GatewayConfigUtility.SchemaNamespace)]
    public partial class MediaGatewayConfigCisco : INotifyPropertyChanged {
        
        [XmlAttribute(AttributeName="DeviceID")]
        public System.Guid _DeviceID = Guid.NewGuid();
        
        public const string DeviceIDProperty = "DeviceID";
        
        [XmlAttribute(AttributeName="UserID")]
        public string _UserID;
        
        public const string UserIDProperty = "UserID";
        
        [XmlAttribute(AttributeName="DisplayName")]
        public string _DisplayName;
        
        public const string DisplayNameProperty = "DisplayName";
        
        [XmlAttribute(AttributeName="MatchRule")]
        public string _MatchRule;
        
        public const string MatchRuleProperty = "MatchRule";
        
        [XmlAttribute(AttributeName="Address")]
        public string _Address;
        
        public const string AddressProperty = "Address";
        
        [XmlAttribute(AttributeName="Password")]
        public string _Password;
        
        public const string PasswordProperty = "Password";
        
        [XmlAttribute(AttributeName="EnablePassword")]
        public string _EnablePassword;
        
        public const string EnablePasswordProperty = "EnablePassword";
        
        [XmlAttribute(AttributeName="Description")]
        public string _Description;
        
        public const string DescriptionProperty = "Description";
        
        [XmlIgnore()]
        public System.Guid DeviceID {
            get {
                return this._DeviceID;
            }
            set {
                if ((_DeviceID != value)) {
                    this._DeviceID = value;
                    this.SendPropertyChanged("DeviceID");
                }
            }
        }
        
        [XmlIgnore()]
        public string UserID {
            get {
                return this._UserID;
            }
            set {
                if ((_UserID != value)) {
                    this._UserID = value;
                    this.SendPropertyChanged("UserID");
                }
            }
        }
        
        [XmlIgnore()]
        public string DisplayName {
            get {
                return this._DisplayName;
            }
            set {
                if ((_DisplayName != value)) {
                    this._DisplayName = value;
                    this.SendPropertyChanged("DisplayName");
                }
            }
        }
        
        [XmlIgnore()]
        public string MatchRule {
            get {
                return this._MatchRule;
            }
            set {
                if ((_MatchRule != value)) {
                    this._MatchRule = value;
                    this.SendPropertyChanged("MatchRule");
                }
            }
        }
        
        [XmlIgnore()]
        public string Address {
            get {
                return this._Address;
            }
            set {
                if ((_Address != value)) {
                    this._Address = value;
                    this.SendPropertyChanged("Address");
                }
            }
        }
        
        [XmlIgnore()]
        public string Password {
            get {
                return this._Password;
            }
            set {
                if ((_Password != value)) {
                    this._Password = value;
                    this.SendPropertyChanged("Password");
                }
            }
        }
        
        [XmlIgnore()]
        public string EnablePassword {
            get {
                return this._EnablePassword;
            }
            set {
                if ((_EnablePassword != value)) {
                    this._EnablePassword = value;
                    this.SendPropertyChanged("EnablePassword");
                }
            }
        }
        
        [XmlIgnore()]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((_Description != value)) {
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void SendPropertyChanged(string propertyName) {
            if ((PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [Serializable()]
    [XmlType(TypeName="MediaGatewayConfigLink", Namespace=GatewayConfigUtility.SchemaNamespace)]
    public partial class MediaGatewayConfigLink : INotifyPropertyChanged {
        
        [XmlAttribute(AttributeName="DeviceID")]
        public System.Guid _DeviceID;
        
        public const string DeviceIDProperty = "DeviceID";
        
        [XmlAttribute(AttributeName="Slot")]
        public int _Slot = 3;
        
        public const string SlotProperty = "Slot";
        
        [XmlAttribute(AttributeName="Port")]
        public int _Port = 0;
        
        public const string PortProperty = "Port";
        
        [XmlAttribute(AttributeName="Title")]
        public string _Title;
        
        public const string TitleProperty = "Title";
        
        [XmlAttribute(AttributeName="IsEnabled")]
        public bool _IsEnabled = true;
        
        public const string IsEnabledProperty = "IsEnabled";
        
        [XmlAttribute(AttributeName="CurrentState")]
        public string _CurrentState;
        
        public const string CurrentStateProperty = "CurrentState";
        
        [XmlAttribute(AttributeName="Description")]
        public string _Description;
        
        public const string DescriptionProperty = "Description";
        
        [XmlIgnore()]
        public System.Guid DeviceID {
            get {
                return this._DeviceID;
            }
            set {
                if ((_DeviceID != value)) {
                    this._DeviceID = value;
                    this.SendPropertyChanged("DeviceID");
                }
            }
        }
        
        [XmlIgnore()]
        public int Slot {
            get {
                return this._Slot;
            }
            set {
                if ((_Slot != value)) {
                    this._Slot = value;
                    this.SendPropertyChanged("Slot");
                }
            }
        }
        
        [XmlIgnore()]
        public int Port {
            get {
                return this._Port;
            }
            set {
                if ((_Port != value)) {
                    this._Port = value;
                    this.SendPropertyChanged("Port");
                }
            }
        }
        
        [XmlIgnore()]
        public string Title {
            get {
                return this._Title;
            }
            set {
                if ((_Title != value)) {
                    this._Title = value;
                    this.SendPropertyChanged("Title");
                }
            }
        }
        
        [XmlIgnore()]
        public bool IsEnabled {
            get {
                return this._IsEnabled;
            }
            set {
                if ((_IsEnabled != value)) {
                    this._IsEnabled = value;
                    this.SendPropertyChanged("IsEnabled");
                }
            }
        }
        
        [XmlIgnore()]
        public string CurrentState {
            get {
                return this._CurrentState;
            }
            set {
                if ((_CurrentState != value)) {
                    this._CurrentState = value;
                    this.SendPropertyChanged("CurrentState");
                }
            }
        }
        
        [XmlIgnore()]
        public string Description {
            get {
                return this._Description;
            }
            set {
                if ((_Description != value)) {
                    this._Description = value;
                    this.SendPropertyChanged("Description");
                }
            }
        }
        
        public event PropertyChangedEventHandler PropertyChanged;
        
        protected virtual void SendPropertyChanged(string propertyName) {
            if ((PropertyChanged != null)) {
                this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    }
}
